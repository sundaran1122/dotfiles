[global]
### Display ###

# follow keyboard
monitor = 0
follow = keyboard

### Geometry ###
# basic geometry
geometry = "200x5-20+25"
shrink = no
notification_height = 0

# more complex geometry
separator_height = 2 # seperator between multiple notifications
indicate_hidden = yes # messages hidden because geometry

# padding
padding = 8
horizontal_padding = 8
text_icon_padding = 0

### Progress bar ###
# Turn on the progess bar
progress_bar = true

# set progress bar size
progress_bar_height = 10
progress_bar_frame_width = 1
progress_bar_min_width = 150
progress_bar_max_width = 300

### Frame options ###
frame_width = 1
frame_color = "#aaaaaa"

### Misc ###
sort = yes # sort by urgency
idle_threshold = 120 # don't remove notifications if user is idle

# Define a color for the separator.
# possible values are:
#  * auto: dunst tries to find a color fitting to the background;
#  * foreground: use the same color as the foreground;
#  * frame: use the same color as the frame;
#  * anything else will be interpreted as a X color.
separator_color = frame

### Text ###
font = mononoki Nerd Font 10
markup = full # support full markdown
ignore_newline = no
alignment = center
word_wrap = yes

line_height = 0

# Vertical alignment of message text and icon.
# Possible values are "top", "center" and "bottom".
vertical_alignment = center

# The format of the message.  Possible variables are:
#   %a  appname
#   %s  summary
#   %b  body
#   %i  iconname (including its path)
#   %I  iconname (without its path)
#   %p  progress value if set ([  0%] to [100%]) or nothing
#   %n  progress value if set without any extra characters
#   %%  Literal %
# Markup is allowed
format = "<i>%a</i>: %s\n\n%b"

show_age_threshold = 60 # show age if notification is older than threshold

# Split notifications into multiple lines if they don't fit into
# geometry.

# When word_wrap is set to no, specify where to make an ellipsis in long lines.
# Possible values are "start", "middle" and "end".
ellipsize = middle

stack_duplicates = true # stack notifications that are duplicates
hide_duplicate_count = false # Hide the count of stacked notifications with the same content

# Display indicators for URLs (U) and actions (A).
show_indicators = yes

### Icons ###
icon_position = left # Align icons left/right/off

min_icon_size = 0
max_icon_size = 32

# Paths to default icons.
icon_path = /usr/share/icons/gnome/16x16/status/:/usr/share/icons/gnome/16x16/devices/

### History ###
# Should a notification popped up from history be sticky or timeout
# as if it would normally do.
sticky_history = yes

history_length = 20

### Advanced ###
dmenu = /usr/bin/dmenu -p dunst: # dmenu options
browser = /usr/bin/firefox -new-tab # browser

# Always run rule-defined scripts, even if the notification is suppressed
always_run_script = true

# Define the title of the windows spawned by dunst
title = Alert
class = Notification

# Print a notification on startup.
# This is mainly for error detection, since dbus (re-)starts dunst
# automatically after a crash.
startup_notification = false

# Ignore the dbus closeNotification message.
# Useful to enforce the timeout set by dunst configuration. Without this
# parameter, an application may close the notification sent before the
# user defined timeout.
ignore_dbusclose = false

### Mouse ###

# Defines list of actions for each mouse event
# Possible values are:
# * none: Don't do anything.
# * do_action: If the notification has exactly one action, or one is marked as default,
#              invoke it. If there are multiple and no default, open the context menu.
# * close_current: Close current notification.
# * close_all: Close all notifications.
# These values can be strung together for each mouse event, and
# will be executed in sequence.
mouse_left_click = close_current
mouse_middle_click = do_action, close_current
mouse_right_click = close_all

# Every section that isn't one of the above is interpreted as a rules to
# override settings for certain messages.
#
# Messages can be matched by
#    appname (discouraged, see desktop_entry)
#    body
#    category
#    desktop_entry
#    icon
#    match_transient
#    msg_urgency
#    stack_tag
#    summary
#
# and you can override the
#    background
#    foreground
#    format
#    frame_color
#    fullscreen
#    new_icon
#    set_stack_tag
#    set_transient
#    timeout
#    urgency
#
# Shell-like globbing will get expanded.
#
# Instead of the appname filter, it's recommended to use the desktop_entry filter.
# GLib based applications export their desktop-entry name. In comparison to the appname,
# the desktop-entry won't get localized.
#
# SCRIPTING
# You can specify a script that gets run when the rule matches by
# setting the "script" option.
# The script will be called as follows:
#   script appname summary body icon urgency
# where urgency can be "LOW", "NORMAL" or "CRITICAL".
#
# NOTE: if you don't want a notification to be displayed, set the format
# to "".
# NOTE: It might be helpful to run dunst -print in a terminal in order
# to find fitting options for rules.

# Disable the transient hint so that idle_threshold cannot be bypassed from the
# client
#[transient_disable]
#    match_transient = yes
#    set_transient = no
#
# Make the handling of transient notifications more strict by making them not
# be placed in history.
#[transient_history_ignore]
#    match_transient = yes
#    history_ignore = yes

# fullscreen values
# show: show the notifications, regardless if there is a fullscreen window opened
# delay: displays the new notification, if there is no fullscreen window active
#        If the notification is already drawn, it won't get undrawn.
# pushback: same as delay, but when switching into fullscreen, the notification will get
#           withdrawn from screen again and will get delayed like a new notification
#[fullscreen_delay_everything]
#    fullscreen = delay
#[fullscreen_show_critical]
#    msg_urgency = critical
#    fullscreen = show


### Urgency settings ###
[urgency_low]
background = "#3B4252"
foreground = "#D8DEE9"
timeout = 3
fullscreen = pushback
# Icon for notifications with low urgency, uncomment to enable
# same for other urgencies
#icon = /path/to/icon

[urgency_normal]
background = "#3B4252"
foreground = "#E5E9F0"
fullscreen = show
timeout = 5

[urgency_critical]
background = "#3B4252"
foreground = "#ECEFF4"
frame_color = "#BF616A"
fullscreen = show
timeout = 10
